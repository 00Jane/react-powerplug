(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"./docs/components/Value.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js"),l=a("./docs/_ui/PropsTable.js");a("./dist/react-powerplug.esm.js");function s(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;s(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"value"}},"Value"),o.a.createElement(r.MDXTag,{name:"p",components:n},"A generic component for storing raw data values."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"usage"}},"Usage"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { Value } from 'react-powerplug'\n")),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<Value initial=\"React\">\n  {({ value, set, reset }) => (\n    <>\n      <Select\n        label=\"Choose one\"\n        options={['React', 'Preact', 'Vue']}\n        value={value}\n        onChange={set}\n      />\n      <Button onClick={reset}>Reset to initial</Button>\n    </>\n  )}\n</Value>\n")),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<Value initial=\"first\">\n  {({ value, set }) => {\n    const bindRadio = radioValue => ({\n      selected: value === radioValue,\n      onClick: () => set(radioValue),\n    })\n\n    return (\n      <form>\n        <RadioCheck {...bindRadio('first')}>First radio</RadioCheck>\n        <RadioCheck {...bindRadio('second')}>Second radio</RadioCheck>\n        <div>Selected value: {value}</div>\n      </form>\n    )\n  }}\n</Value>\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),o.a.createElement(l.d,null,o.a.createElement(l.c,{name:"initial",type:"any"},"Specifies the initial `value` state."),o.a.createElement(l.c,{name:"onChange",type:"function"},"The onChange event of the Value is called whenever the on state changes."),o.a.createElement(l.c,{name:"children",type:"function"},"Receive state as function. It can also be `render` prop.")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"children-props"}},"Children Props"),o.a.createElement(l.b,null,o.a.createElement(l.a,{name:"value",type:"any"},"Your `value` state value"),o.a.createElement(l.a,{name:"set",type:"function"},"Arbitrary set a value to `value` state"),o.a.createElement(l.a,{name:"reset",type:"function"},"Reset `value` to initial state")))}}}]);
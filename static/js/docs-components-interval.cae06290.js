(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./docs/components/Interval.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),r=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js"),l=t("./docs/_ui/PropsTable.js");t("./dist/react-powerplug.esm.js");function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}n.default=function(e){var n=e.components;s(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"interval"}},"Interval"),r.a.createElement(o.MDXTag,{name:"p",components:n},"The Interval component is used for when it's necessary to re-render at regular intervals. Also known as Frame."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"usage"}},"Usage"),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { Interval } from 'react-powerplug'\n")),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<Interval delay={1000}>\n  {({ start, stop }) => (\n    <>\n      <div>The time is now {new Date().toLocaleTimeString()}</div>\n      <button onClick={() => stop()}>Stop interval</button>\n      <button onClick={() => resume()}>Start interval</button>\n    </>\n  )}\n</Interval>\n")),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),r.a.createElement(l.d,null,r.a.createElement(l.c,{name:"delay",type:"number",default:1e3},"Specifies the delay (for `setInterval`) between re-renders in milliseconds.",r.a.createElement("br",null),"The interval will be reset any time this prop changes.",r.a.createElement("br",null),"Whenever `delay` is not a finite number, no interval will be set and `Interval` will not automatically re-render."),r.a.createElement(l.c,{name:"children",type:"function"},"Receive state as function. It can also be `render` prop.")),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"children-props"}},"Children Props"),r.a.createElement(l.b,null,r.a.createElement(l.a,{name:"start",type:"function"},"Start (or resume) re-renders intervals at defined delay (if not passed delay arg it will be used from props).",r.a.createElement("br",null),"Good way to change delay time when needed."),r.a.createElement(l.a,{name:"stop",type:"function"},"Stop (or pause) re-renders intervals"),r.a.createElement(l.a,{name:"toggle",type:"function"},"Start or Stop re-renders intervals based on current status")))}}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./docs/Guide.mdx":function(e,n,t){"use strict";t.r(n);var o=t("./node_modules/react/index.js"),a=t.n(o),r=t("./node_modules/@mdx-js/tag/dist/index.js");function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}n.default=function(e){var n=e.components;p(e,["components"]);return a.a.createElement(r.MDXTag,{name:"wrapper",components:n},a.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"guide"}},"Guide"),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"creating-a-dumb-component"}},"Creating a Dumb Component"),a.a.createElement(r.MDXTag,{name:"p",components:n},"Dumb Component, Presentational Component or (sometimes) Controlled Component is a component\nresponsible ",a.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"only for displaying content without any logic behind"),". Usually they\nreceive specific props, and if they are interactive, it exposes events like onClick, onChange, etc."),a.a.createElement(r.MDXTag,{name:"p",components:n},"A Styled Component a good example."),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},'import React from "react";\nimport styled from "styled-components";\n\nconst DumbCheckbox = styled("div")`\n  cursor: pointer;\n  &:before {\n    content: \'${props => (props.checked ? "\u25a0" : "\u25a1")} \';\n  }\n`;\n\nconst App = () => (\n  <DumbCheckbox>Check me</DumbCheckbox>\n);\n')),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"using-react-powerplug"}},"Using React PowerPlug"),a.a.createElement(r.MDXTag,{name:"p",components:n},"Now that you have your Dumb Component, you can pass state to it.",a.a.createElement(r.MDXTag,{name:"br",components:n,parentName:"p"}),"Using react-powerplug this step is trivial and pretty simple.  "),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},'import { Toggle } from "react-powerplug";\n\n<Toggle>\n  {({ on, toggle }) => (\n    <DumbCheckbox checked={on} onClick={toggle}>\n      Check me\n    </DumbCheckbox>\n  )}\n</Toggle>\n')))}}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"./docs/components/Toggle.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js"),l=t("./docs/_ui/PropsTable.js");t("./dist/react-powerplug.esm.js");function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;c(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"toggle"}},"Toggle"),o.a.createElement(r.MDXTag,{name:"p",components:n},"The Toggle component is used to toggle a boolean. True/false."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"usage"}},"Usage"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { Toggle } from 'react-powerplug'\n")),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<Toggle initial={false}>\n  {({ on, toggle }) => (\n    <Checkbox onClick={toggle} checked={on} />\n  )}\n</Toggle>\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),o.a.createElement(l.d,null,o.a.createElement(l.c,{name:"initial",type:"boolean",default:!1},"Specifies the initial `on` state."),o.a.createElement(l.c,{name:"onChange",type:"function"},"The onChange event of the Toggle is called whenever the on state changes."),o.a.createElement(l.c,{name:"children",type:"function"},"Receive state as function. It can also be `render` prop.")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"children-props"}},"Children Props"),o.a.createElement(l.b,null,o.a.createElement(l.a,{name:"on",type:"boolean"},"Your `on` state value"),o.a.createElement(l.a,{name:"toggle",type:"function"},"Toggle your `on` state value"),o.a.createElement(l.a,{name:"set",type:"function"},"Arbitrary set a value to `on` state"),o.a.createElement(l.a,{name:"reset",type:"function"},"Reset `on` to initial state")))}}}]);
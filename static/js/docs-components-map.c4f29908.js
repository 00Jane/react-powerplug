(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"./docs/components/Map.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),s=a("./node_modules/@mdx-js/tag/dist/index.js"),c=a("./docs/_ui/PropsTable.js");a("./dist/react-powerplug.esm.js");function r(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;r(e,["components"]);return o.a.createElement(s.MDXTag,{name:"wrapper",components:n},o.a.createElement(s.MDXTag,{name:"h1",components:n,props:{id:"map"}},"Map"),o.a.createElement(s.MDXTag,{name:"p",components:n},"The Map component is a generic used for a free key-value logics."),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { Map } from 'react-powerplug'\n")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<Map initial={{ sounds: true, music: true, graphics: 'medium' }}>\n  {({ set, get }) => (\n    <Tings>\n      <ToggleCheck checked={get('sounds')} onChange={c => set('sounds', c)}>\n        Game Sounds\n      </ToggleCheck>\n      <ToggleCheck checked={get('music')} onChange={c => set('music', c)}>\n        Bg Music\n      </ToggleCheck>\n      <Select\n        label=\"Graphics\"\n        options={['low', 'medium', 'high']}\n        selected={get('graphics')}\n        onSelect={value => set('graphics', value)}\n      />\n    </Tings>\n  )}\n</Map>\n")),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),o.a.createElement(c.d,null,o.a.createElement(c.c,{name:"initial",type:"object",default:{}},"Specifies the initial `values` state."),o.a.createElement(c.c,{name:"onChange",type:"function"},"The onChange event of the Map is called whenever the `values` state changes."),o.a.createElement(c.c,{name:"children",type:"function"},"Receive state as function. It can also be `render` prop.")),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"map-children-props"}},"Map Children Props"),o.a.createElement(c.b,null,o.a.createElement(c.a,{name:"values",type:"object"},"Your `values` state value"),o.a.createElement(c.a,{name:"set",type:"function"},"Assigns `value` to `key`"),o.a.createElement(c.a,{name:"over",type:"function"},"Takes a `key` and `function`, map a function over key's `value`"),o.a.createElement(c.a,{name:"get",type:"function"},"Get assigned `value` from `key`"),o.a.createElement(c.a,{name:"reset",type:"function"},"Reset `values` to initial state")))}}}]);